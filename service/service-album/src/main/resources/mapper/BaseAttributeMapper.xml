<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.atguigu.tingshu.album.mapper.BaseAttributeMapper">
    <!--
        自定义返回结果集
        id: 表示唯一标识
        type: 表示当前这个方法返回值的数据类型{泛型}
        autoMapping：表示自动映射
    -->
    <resultMap id="BaseAttributeMap" type="com.atguigu.tingshu.model.album.BaseAttribute" autoMapping="true">
        <!--
             id:表示一张表的主键
             property:表示实体类的属性名
             column: 表示当前执行完成sql语句的列名！
         -->
        <id property="id" column="id"></id>
        <!--
         result: 表示普通字段映射
     -->
        <!--<result property="category1Id" column="category1_id"></result>-->
        <!--
            配置一对多
            property:表示实体类的属性名
            ofType:表示多的数据类型

        -->
        <collection property="attributeValueList" ofType="com.atguigu.tingshu.model.album.BaseAttributeValue" autoMapping="true">
            <id property="id" column="attribute_value_id"></id>
        </collection>
    </resultMap>

    <!--
      id：表示方法名
      resultType：表示返回一个具体的数据类型 简单的类型
      resultMap：表示返回一个复杂的映射结果集
  -->
    <sql id="baseSql">
        ba.id,
        ba.category1_id,
        ba.attribute_name,
        bav.id attribute_value_id,
        bav.value_name
    </sql>
    <select id="selectAttribute" resultMap="BaseAttributeMap">
        select
        <include refid="baseSql"></include>
        from base_attribute ba inner join base_attribute_value bav
        on ba.id = bav.attribute_id
        where ba.category1_id = #{category1Id} and ba.is_deleted =0 and bav.is_deleted = 0
    </select>
</mapper>

